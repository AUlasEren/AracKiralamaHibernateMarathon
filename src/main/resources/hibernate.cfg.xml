<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- Kullanılacak veritabanı sürücüsünün adı -->
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <!-- ConnectionString -->
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:5432/AracKiralamaDB</property>
        <!-- Kullanıcı adı, yetkili kullanıcı -->
        <property name="hibernate.connection.username">postgres</property>
        <!-- Şifre -->
        <property name="hibernate.connection.password">root</property>
        <!-- update -> Entitylerinize bakar eğer bunlara karşılık gelen tablolar DB de var ise
                       olduğu gibi bırakır. Eğer tablolar yok ise varlıklara ait tabloları oluşturur.
             create -> Entity lerinize ait tüm tabloları, uygulama her başladığında tekrar tekrar oluşturur.
                       DİKKAT !! bir uygulamada create kullanılır ise veritabanından veriler tamamen silinir.
             create/drop -> Her seferinde tablolar oluşturulur, uygulama kapatılırken tüm tablolar silinir.
        -->
        <property name="hibernate.hbm2ddl.auto">update</property>
        <!-- Hibernate bizim adımıza SQL komutlarını yazmaktadır. Bu yazmakta olduğu SQL kodlarını
             konsol ekranında görebilmek için bunu aktif ederiz
        -->
        <property name="hibernate.show_sql">true</property>

        <!-- Hibernate in haritalayacağı tüm Java sınıflarını belirtiyoruz.
             DİKKAT !! kafanıza göre her sınıfı haritalayamazsınız. Çünkü hibernate @entity ile işaretlenmş hiçbir
             sınıfı kullanmaz.
         -->
        <property name="hibernate.format_sql">true</property>
        <mapping class = "com.ulas.repository.entity.Person"></mapping>
        <mapping class = "com.ulas.repository.entity.Car"></mapping>
        <mapping class = "com.ulas.repository.entity.Rent"></mapping>


    </session-factory>
</hibernate-configuration>